/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
**                   Auther: Qiang Xin Bo                          **
********************************************************************/
#ifndef __DMTIMERNODE_H_INCLUDE__
#define __DMTIMERNODE_H_INCLUDE__

#include "dmtimersink.h"

#include <string>
#include <map>

class CDMTimerNode :
    public ITimerSink
{
public:
    typedef std::map<unsigned long long, CDMTimerElement*> TimerElementMap;
    typedef TimerElementMap::iterator TimerElementMapIt;
    typedef TimerElementMap::const_iterator TimerElementMapCIt;
public:
    CDMTimerNode();
    virtual ~CDMTimerNode();

    CDMTimerNode(const CDMTimerNode& oNode);
    CDMTimerNode& operator=(const CDMTimerNode& oNode);

    void Reset();
    void CopyFrom( const CDMTimerNode &oNode );

    bool SetTimer(unsigned long long qwIDEvent, unsigned long long qwElapse);

    bool SetTimer(unsigned long long qwIDEvent, unsigned long long qwElapse, dm::any& oAny, bool bExact = false);

    void KillTimer(unsigned long long qwIDEvent);

    void KillTimer();

    unsigned long long GetTimerElapse(unsigned long long qwIDEvent);
    unsigned long long GetTimerRemain(unsigned long long qwIDEvent);

    CDMTimerElement* GetTimerElement(unsigned long long qwIDEvent);

    virtual void OnTimer(unsigned long long qwIDEvent);
    virtual void OnTimer(unsigned long long qwIDEvent, dm::any& oAny);
private:
    TimerElementMap m_oTimerElementMap;
};

#endif // __DMTIMERNODE_H_INCLUDE__

